/*--------------------------------*- C++ -*---------------------------------*\ 
| ========                 |                                                 | 
| \      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           | 
|  \    /   O peration     | Version:  v1812                                 | 
|   \  /    A nd           | Web:      www.OpenFOAM.com                      | 
|    \/     M anipulation  |                                                 | 
\*--------------------------------------------------------------------------*/ 
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      adjointDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

flowOptions
{
    flowCondition          Incompressible;
    setFlowBCs             false;
    flowBCs                { bc5 {patch inlet; variable nuTilda; value (1e-05);} bc0 {patch inlet; variable U; value (1.179 0.0 0.0);} bc1 {patch outlet; variable p; value (0.0);} }
    inletPatches           (inlet);
    outletPatches          (outlet);
    derivUInInfo           {stateName U; component 0; type fixedValue;patchNames (inlet ); }
    userDefinedPatchInfo   { }
    userDefinedVolumeInfo  { userDefinedVolume0 { stateName U; component 0; radiusInner 0.0207; axis x; scale 1.0; width 0.005; radiusOuter 0.1015; centerX 6.886; centerY 0.0; centerZ -0.282898; type annulus; }  userDefinedVolume1 { stateName U; component 0; radiusInner 0.0207; axis x; scale 1.0; width 0.015; radiusOuter 0.1015; centerX 6.912; centerY 0.0; centerZ -0.282898; type annulus; }  }
    referenceValues        (ARef 1.222060e+01 magURef 1.179000e+00 pRef 0.000000e+00 rhoRef 1.000000e+00 LRef 7.000000e+00 );
    divDev2                true;
    useNKSolver            false;
    nkSegregatedTurb       false;
    nkSegregatedPhi        false;
    nkRelTol               1.000000e-08;
    nkAbsTol               1.000000e-12;
    nkSTol                 1.000000e-08;
    nkEWRTol0              0.300000;
    nkEWRTolMax            0.700000;
    nkPCLag                1;
    nkMaxIters             100;
    nkMaxFuncEvals         10000;
    nkASMOverlap           1;
    nkGlobalPCIters        0;
    nkLocalPCIters         1;
    nkPCFillLevel          0;
    nkJacMatReOrdering     rcm;
    nkGMRESMaxIters        500;
    nkGMRESRestart         500;
}

adjointOptions
{
    solveAdjoint           true;
    useColoring            true;
    normalizeResiduals     (URes pRes phiRes kRes omegaRes nuTildaRes);
    normalizeStates        (U p phi k omega nuTilda);
    nFFDPoints             0;
    correctWallDist        true;
    reduceResCon4JacMat    false;
    calcPCMat              true;
    fastPCMat              false;
    delTurbProd4PCMat      false;
    writeMatrices          false;
    adjGMRESMaxIters       1500;
    adjGMRESRestart        1500;
    adjASMOverlap          1;
    adjJacMatOrdering      cell;
    adjJacMatReOrdering    rcm;
    adjGlobalPCIters       0;
    adjLocalPCIters        1;
    adjPCFillLevel         1;
    adjGMRESRelTol         1.000000e-05;
    adjGMRESAbsTol         1.000000e-16;
    minTolJac              1.000000e-14;
    maxTolJac              1.000000e+14;
    minTolPC               1.000000e-14;
    maxTolPC               1.000000e+14;
    stateResetTol          1.000000e-06;
    tractionBCMaxIter      20;
    epsDeriv               1.000000e-07;
    epsDerivFFD            1.000000e-04;
    epsDerivXv             1.000000e-07;
    epsDerivUIn            1.000000e-05;
    epsDerivVis            1.000000e-08;
    stateScaling           ( UScaling 1.0 nuTildaScaling 0.0001 kScaling 0.0001 p_rghScaling 0.5 phiScaling 1.0 pScaling 0.5 omegaScaling 1.0);
    residualScaling        ();
    maxResConLv4JacPCMat   ( URes 2 nuTildaRes 2 pRes 2 phiRes 1);
    adjDVTypes             (FFD);
}

actuatorDiskOptions
{
    actuatorActive         1;
    actuatorAdjustThrust   0;
    actuatorVolumeNames    (userDefinedVolume1 );
    actuatorThrustCoeff    (0.002260 );
    actuatorPOverD         (0.750000 );
    actuatorRotationDir    (right );
}

objectiveFunctionOptions
{
    objFuncs               (CD VARV);
    objFuncGeoInfo         (  (hull)  (userDefinedVolume0) );
    dragDir                (1.0000000000 0.0000000000 0.0000000000 );
    liftDir                (0.0000000000 0.0000000000 1.0000000000 );
    CofR                   (0.0000000000 0.0000000000 0.0000000000 );
    rotRad                 (0.0000000000 0.0000000000 0.0000000000 );
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
