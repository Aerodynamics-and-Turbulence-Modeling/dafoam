/*--------------------------------*- C++ -*---------------------------------*\ 
| ========                 |                                                 | 
| \      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           | 
|  \    /   O peration     | Version:  v1812                                 | 
|   \  /    A nd           | Web:      www.OpenFOAM.com                      | 
|    \/     M anipulation  |                                                 | 
\*--------------------------------------------------------------------------*/ 
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      adjointDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

flowOptions
{
    flowCondition          Compressible;
    setFlowBCs             false;
    flowBCs                { bc0 {patch inlet; variable U; value (0 0 98.68971);} bc1 {patch outlet; variable p; value (102000.0);} }
    inletPatches           (inlet);
    outletPatches          (outlet);
    derivUInInfo           {stateName p; component 0; type fixedValue;patchNames (outlet ); }
    userDefinedPatchInfo   { }
    userDefinedVolumeInfo  { }
    referenceValues        (ARef 1.000000e+00 magURef 1.000000e+02 rhoRef 1.170000e+00 pRef 1.013250e+05 TRef 2.881500e+02 LRef 1.000000e-01 );
    divDev2                true;
    useNKSolver            false;
    nkSegregatedTurb       false;
    nkSegregatedPhi        false;
    nkRelTol               1.000000e-08;
    nkAbsTol               1.000000e-12;
    nkSTol                 1.000000e-08;
    nkEWRTol0              0.300000;
    nkEWRTolMax            0.700000;
    nkPCLag                1;
    nkMaxIters             100;
    nkMaxFuncEvals         10000;
    nkASMOverlap           1;
    nkGlobalPCIters        0;
    nkLocalPCIters         1;
    nkPCFillLevel          0;
    nkJacMatReOrdering     rcm;
    nkGMRESMaxIters        500;
    nkGMRESRestart         500;
}

adjointOptions
{
    solveAdjoint           true;
    useColoring            true;
    normalizeResiduals     (URes pRes eRes nuTildaRes TRes phiRes kRes epsilonRes omegaRes);
    normalizeStates        (U p e nuTilda T phi k epsilon omega);
    nFFDPoints             120;
    correctWallDist        true;
    reduceResCon4JacMat    false;
    calcPCMat              true;
    fastPCMat              false;
    delTurbProd4PCMat      false;
    writeMatrices          false;
    adjGMRESMaxIters       1000;
    adjGMRESRestart        1000;
    adjASMOverlap          1;
    adjJacMatOrdering      cell;
    adjJacMatReOrdering    natural;
    adjGlobalPCIters       0;
    adjLocalPCIters        1;
    adjPCFillLevel         1;
    adjGMRESRelTol         1.000000e-05;
    adjGMRESAbsTol         1.000000e-16;
    minTolJac              1.000000e-14;
    maxTolJac              1.000000e+200;
    minTolPC               1.000000e-14;
    maxTolPC               1.000000e+200;
    stateResetTol          1.000000e-06;
    tractionBCMaxIter      20;
    epsDeriv               1.000000e-05;
    epsDerivFFD            1.000000e-04;
    epsDerivXv             1.000000e-07;
    epsDerivUIn            1.000000e-03;
    epsDerivVis            1.000000e-08;
    stateScaling           ( UScaling 100 eScaling 10000 kScaling 1.0 TScaling 300.0 epsilonScaling 1.0 nuTildaScaling 0.001 omegaScaling 1.0 phiScaling 1 pScaling 100000.0);
    residualScaling        ();
    maxResConLv4JacPCMat   ( URes 2 kRes 2 epsilonRes 2 eRes 2 omegaRes 2 TRes 2 phiRes 2 nuTildaRes 2 pRes 3);
    adjDVTypes             (FFD);
}

actuatorDiskOptions
{
    actuatorActive         0;
    actuatorAdjustThrust   0;
    actuatorVolumeNames    ();
    actuatorThrustCoeff    ();
    actuatorPOverD         ();
    actuatorRotationDir    ();
}

objectiveFunctionOptions
{
    objFuncs               (TPR MFR CMZ);
    objFuncGeoInfo         (  (inlet outlet)  (outlet)  (bladeps bladess bladefillet) );
    dragDir                (1.0000000000 0.0000000000 0.0000000000 );
    liftDir                (0.0000000000 0.0000000000 1.0000000000 );
    CofR                   (0.0000000000 0.0000000000 0.0000000000 );
    rotRad                 (0.0000000000 0.0000000000 0.0000000000 );
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
